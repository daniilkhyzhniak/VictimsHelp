// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VictimsHelp.DAL;

namespace VictimsHelp.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VictimsHelp.DAL.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("VictimsHelp.DAL.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("54226388-fb2b-43d2-aaa8-2081f737256f"),
                            IsDeleted = false,
                            Name = "Client"
                        },
                        new
                        {
                            Id = new Guid("86988951-d8e4-4ccc-86e0-9b08d79329cc"),
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("f7e4589a-5c17-4ed5-b50c-d0bd5e8bb8c5"),
                            IsDeleted = false,
                            Name = "Psychologist"
                        });
                });

            modelBuilder.Entity("VictimsHelp.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("317d0585-f49d-44bc-b002-ef2ef824b150"),
                            Age = 0,
                            Email = "admin1@gmail.com",
                            FirstName = "admin1",
                            Gender = "M",
                            IsDeleted = false,
                            LastName = "admin1",
                            Password = "$2a$11$mG1qU6KUFnGsVPnniiuyQ.f.7.u0OHubBupDtxxDDijEafoC1Xr3.",
                            PhoneNumber = "0501234567"
                        },
                        new
                        {
                            Id = new Guid("340bc179-b3c7-4fdb-8cf2-eec3ab985c6a"),
                            Age = 0,
                            Email = "user1@gmail.com",
                            FirstName = "User1",
                            Gender = "W",
                            IsDeleted = false,
                            LastName = "User1",
                            Password = "$2a$11$veTnP4cCgj1fTc05HDB1TOG1zoFltI/CTmeW6esSljklJlsIB0Y52",
                            PhoneNumber = "0998887766"
                        });
                });

            modelBuilder.Entity("VictimsHelp.DAL.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4763038-cd2f-405b-bc13-395255ed5825"),
                            IsDeleted = false,
                            RoleId = new Guid("54226388-fb2b-43d2-aaa8-2081f737256f"),
                            UserId = new Guid("340bc179-b3c7-4fdb-8cf2-eec3ab985c6a")
                        },
                        new
                        {
                            Id = new Guid("a3c333f0-2260-46ea-80fa-f6e9c1b52964"),
                            IsDeleted = false,
                            RoleId = new Guid("86988951-d8e4-4ccc-86e0-9b08d79329cc"),
                            UserId = new Guid("317d0585-f49d-44bc-b002-ef2ef824b150")
                        },
                        new
                        {
                            Id = new Guid("151232d8-cb7e-49a9-8b43-92fa9cce4239"),
                            IsDeleted = false,
                            RoleId = new Guid("f7e4589a-5c17-4ed5-b50c-d0bd5e8bb8c5"),
                            UserId = new Guid("317d0585-f49d-44bc-b002-ef2ef824b150")
                        },
                        new
                        {
                            Id = new Guid("9876f97a-f43d-4807-8187-cffe0b17d321"),
                            IsDeleted = false,
                            RoleId = new Guid("54226388-fb2b-43d2-aaa8-2081f737256f"),
                            UserId = new Guid("317d0585-f49d-44bc-b002-ef2ef824b150")
                        });
                });

            modelBuilder.Entity("VictimsHelp.DAL.Entities.UserRole", b =>
                {
                    b.HasOne("VictimsHelp.DAL.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VictimsHelp.DAL.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VictimsHelp.DAL.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("VictimsHelp.DAL.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
